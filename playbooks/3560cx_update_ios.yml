---
- name: 3560CX IOS UPGRADE TO 15.2.7(E6)
  hosts: test_switches
  connection: network_cli
  gather_facts: no

  vars:
   - compliant_ios_version: c3560cx-universalk9-mz.152-7.E6.bin
   - new_ios_bin: c3560cx-universalk9-mz.152-7.E6.bin
   - new_ios_md5: 1d3c6f78f7df594ae4bdd9faa16ee6de
  vars_prompt:
   - name: "reboot?"
     prompt: "Do you want Ansible to reboot the hosts?(y/n)"
     private: no

  tasks:
    - name: GATHER SWITCH FACTS
      ios_facts:

    - name: TFTP IMAGE
      block:
      - name: COPY OVER IOS IMAGE
        ios_command:
          commands:
            - command: 'copy tftp://10.27.18.14/{{ new_ios_bin }} flash:'
              prompt: 'Destination filename \[{{ new_ios_bin }}\]?'
              answer: "\r"
        vars:
          ansible_command_timeout: 600

      - name: VERIFY MD5
        ios_command:
          commands:
            - "verify /md5 flash:{{ new_ios_bin }}"
          wait_for: result[0] contains "{{ new_ios_md5 }}"
          retries: 1
        vars:
          ansible_command_timeout: 140
      - debug:
          msg: "Md5 Verified!"

      - name: CONTINUE UPGRADE IF MD5 HASH MATCHES
        block:
        - name: SETTING BOOT IMAGE
          cisco.ios.ios_config:
            lines:
            - boot system flash:{{ new_ios_bin }}
            match: none
            save_when: modified

        - name: REBOOT SWITCH IF INSTRUCTED
          block:
          - name: REBOOT SWITCH
            ios_command:
               commands:
                  - command: "reload"
                    prompt: '\[confirm]\'
                    answer: "\n"
            vars:
              ansible_command_timeout: 30

          - name: WAIT FOR SWITCH TO RETURN
            wait_for:
              host: "{{inventory_hostname}}"
              port: 22
              delay: 60
              timeout: 600
            delegate_to: localhost

          - name: GATHER ROUTER FACTS FOR VERIFICATION
            ios_facts:

          - name: ASSERT THAT THE IOS VERSION IS CORRECT
            assert:
              that:
                - compliant_ios_version == ansible_net_version
              msg: "IOS version does not match compliant version. Upgrade unsuccessful."
          when: should_reboot == "y"
        when: {{ new_ios_md5 }} in md5_result.stdout[0]

      when: ansible_net_version != compliant_ios_version
...
